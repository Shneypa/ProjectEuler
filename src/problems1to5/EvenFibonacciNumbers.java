package problems1to5;

import java.util.ArrayList;

/* 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 * 
 */

public class EvenFibonacciNumbers {

	private static int[] fiboArray;
	private static int validElements = 0;

	private static int i = 1; 
	private static int first;
	private static int second;
	private static int current;
	
	private static int[] resultArray;
	private static int sumOfEvenElements = 0;
	
	public static void fiboArray(int maxNumber) {
		fiboArray = new int[100];
		
		fiboArray[0] = 1;
		fiboArray[1] = 2;
		current = 0;
		
		first = fiboArray[0];
		second = fiboArray[1];
		
		while (current < maxNumber) {
			
			i++;
			
			fiboArray[i] = first + second;
			if (fiboArray[i] > maxNumber) {
				fiboArray[i] = 0;
				validElements = i;
				break;
			}
			current = fiboArray[i];
			first = second;
			second = fiboArray[i];
		
			// trackExecution();  // debugging tool
		
		}
		
		trimArray();
		
		sum();
		
		System.out.println();
		System.out.println("Sum of even elements: " + sumOfEvenElements);
	}

	
	private static void sum() {
		for (int k = 0; k < i ; k++)
			if (resultArray[k] % 2 == 0)
				sumOfEvenElements += resultArray[k];
	}
	
	// trim empty elements
	private static void trimArray() {
		resultArray = new int[validElements];
		
		for (int j = 0; j < resultArray.length; j++)  
			resultArray[j] = fiboArray[j];
		
		for(int x : resultArray) 
			System.out.print(x + " ");
	}
	
	// debugging tool
	private static void trackExecution() {
		System.out.println("i = " + i);
		System.out.print("Fibo - 2 = " + first + " ");
		System.out.println();
		System.out.print("Fibo - 1 = " + second + " ");
		System.out.println();
			
		System.out.print("Fibo = " + current + " ");
		System.out.println();
	}
	
	
}
